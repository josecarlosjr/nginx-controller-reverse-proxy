---
apiVersion: v1
kind: ConfigMap
metadata:
  name: confnginx
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
      include       /etc/nginx/mime.types;

      default_type  application/octet-stream;
      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
      access_log  /var/log/nginx/access.log  main;
      sendfile on;
      keepalive_timeout  65;

      #ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
      ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256";
      ssl_prefer_server_ciphers on;
      
      #   upstream hello-blue-whale {
      #          server 10.101.161.44:443;
      #}


      #  server {
      #          listen 80 ;
      #          server_name exemplo.org;
      #          location / {                        
      #                  #root /usr/share/nginx/html;
      #                  #index index.html index.htm;
      #                  #return 301 https://$server_name$request_uri;
      #                  return 301 https://exemplo.org;
      #}
      #}
      #server {
      #          listen 443 ssl;
      #          server_name exemplo.org;
      #  
      #          ssl_certificate /etc/nginx/ssl/tls.crt;
      #          ssl_certificate_key /etc/nginx/ssl/tls.key;
      #
      #          location / {
      #                  root /usr/share/nginx/html;
      #                  index index.html index.htm;        
      #          }                
      #}

      #As proximas linhas redirecionam para outros serviços onde a autenticação deve ser feita dentro
      #desses serviços

            server {
             listen 80;
             server_name hello-blue-whale;
             resolver kube-dns.kube-system.svc.cluster.local valid=5s;

            location /healthz {
               return 200;
              }

           location = /favicon.ico {
                   return 204;
                   access_log     off;
                    log_not_found  off;
              }

             location / {
                    #proxy_set_header upgrade $http_upgrade;
                    #proxy_set_header Connection "Upgrade";                     
                    #proxy_pass https://hello-blue-whale;
                    proxy_set_header Host $host;#             
                    return 301 https://10.101.161.44;
              }
            }
            server {
                listen 443 ssl;
                server_name exemplo.org;
      #
                ssl_certificate /etc/nginx/ssl/tls.crt;
                ssl_certificate_key /etc/nginx/ssl/tls.key;
      #
                location / {
                         root /usr/share/nginx/html/hello-whale;
                         index index.html index.htm; 
      #                  proxy_pass http://10.101.161.44:8080;
      #                  
                }
      }
      
     ###################################################################
      # server {
      #        listen 443 ssl;
      #        server_name hello-blue-whale;
      #        resolver kube-dns.kube-system.svc.cluster.local valid=5s;
      #        
      #        ssl_certificate /etc/nginx/ssl/tls.crt;
      #        ssl_certificate_key /etc/nginx/ssl/tls.key;
      #        #ssl_client_certificate /../../;
      #        #ssl_verify_client optional;
      # 
      #        proxy_ssl_trusted_certificate /etc/nginx/ssl/tls.crt;
      #
      #        location = /favicon.ico {
      #              return 204;
      #              access_log     off;
      #              log_not_found  off;
      #      }
      #
      #        location / {
      #                #proxy_pass http://;
      #                proxy_pass http://10.101.161.44:8083;
      #                proxy_set_header host $host;                      
      #                #proxy_hide_header 'Access-Control-Allow-Origin';
      #                proxy_http_version 1.1;
      #                #proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
      #                #proxy_set_header body_bytes_sent $body_bytes_sent;
      #        }
      # 
      #      }





      }
